import Head from "next/head";
import InfoInputForm from "@/components/home/InfoInputForm";
import { ChangeEvent, use, useRef, useState } from "react";
import Privacy from "@/components/home/Privacy";
import styles from "@/styles/Home.module.css";
import { useRouter } from "next/router";
import { User } from "@/types";
import { useDispatch } from "react-redux";
import { setUserInfo } from "@/modules/user";
import Button from "@/components/common/Button/Button";

export default function Home() {
  let router = useRouter();
  const dispatch = useDispatch();

  const [user, setUser] = useState<User>({
    phone: "",
    ages: "",
    sex: "",
    check: false,
  });

  const phoneRef = useRef<HTMLInputElement>(null);

  const onChangePhone = (e: ChangeEvent<HTMLInputElement>) => {
    if (phoneRef.current) {
      const value = phoneRef.current.value.replace(/\D+/g, "");
      const phoneLength = 11;
      let result = "";
      for (let i = 0; i < value.length && i < phoneLength; i++) {
        switch (i) {
          case 3:
            result += "-";
            break;
          case 7:
            result += "-";
            break;
          default:
            break;
        }
        result += value[i];
      }
      phoneRef.current.value = result;
      setUser((prev) => ({
        ...prev,
        phone: e.target.value,
      }));
    }
  };

  const onClickNext = () => {
    if (user.phone === "" || user.phone.length !== 13) {
      alert("핸드폰 번호를 입력해주세요.");
    } else if (user.sex === "") {
      alert("성별을 선택해주세요.");
    } else if (user.ages === "") {
      alert("연령대를 선택해주세요.");
    } else if (!user.check) {
      alert("개인정보 수집/이용에 동의해주세요.");
    } else {
      // query로 데이터 넘길수 있음
      // router.push({
      //   pathname: "/survey",
      //   query: { ...user },
      // });
      router.push("/survey");
      dispatch(setUserInfo(user));
    }
  };

  const onChangeCheck = () => {
    setUser((prev) => ({
      ...prev,
      check: !user.check,
    }));
  };

  const onChangeHandle = (e: ChangeEvent<HTMLInputElement>) => {
    const { name, value } = e.target;
    setUser((prev) => ({
      ...prev,
      [name]: value,
    }));
  };

  return (
    <>
      <Head>
        <title>Survey Temp</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.wrapper}>
          <InfoInputForm
            user={user}
            phoneRef={phoneRef}
            onChangePhone={onChangePhone}
            onChangeHandle={onChangeHandle}
          />
          <Privacy check={user.check} onChangeCheck={onChangeCheck} />
        </div>
        <Button
          disabled={!user.check}
          onClick={onClickNext}
          text={"넘어가기"}
        />
      </main>
    </>
  );
}
